[metadata]
definition = `metadata_by_type("sourcetype")` | append [`metadata_by_type("source")`]  | append [`metadata_by_type("host")`]

[metadata_by_type(1)]
args = type
definition = metadata index=* type=$type$s | rename $type$ AS item | rex field=type "(?<type>.+)s"

[search_check_items]
definition = search [| inputlookup checkitems | fields item]

[search_check_items_by_type(1)]
args = type
definition = `search_check_items_by_type("$type$", "")`

[search_check_items_by_type(2)]
args = type,prefix
definition = search $prefix$ [| inputlookup checkitems where type=$type$ | fields item, type]

# The firstTime field is the timestamp for the first time that the indexer saw an event from this host.
# The lastTime field is the timestamp for the last time that the indexer saw an event from this host.
# The recentTime field is the indextime for the most recent time that the index saw an event from this host. In other words, this is the time of the last update.
# The totalcount field is the total number of events seen from this host.
# The type field is the specified type of metadata to display. Because this search specifies type=hosts, there is also a host column.
[check_items_table]
definition = table item, type, firstTime, lastTime, recentTime, totalCount

[check_items]
definition = `check_items("*")`

[check_items(1)]
args = interval
definition = `check_items("$interval$", "*")`

[check_items(2)]
args = interval,type
definition = `check_items("$interval$", "$type$", "")`

[check_items(3)]
args = interval,type,prefix
definition = `search_check_items_by_type("$type$", "$prefix$")` | lookup checkitems item, type OUTPUT timeliness,interval \
| eval expectedLastTime=strftime(relative_time(now(), timeliness),"%s") \
| eval noEventsSince=tostring((now() - lastTime), "duration") \
| eval ok=if(lastTime<expectedLastTime, 0, 1) \
| convert ctime(firstTime), ctime(lastTime), ctime(recentTime), ctime(expectedLastTime) \
| table item, type, lastTime, expectedLastTime, noEventsSince, ok

[hr_duration(1)]
args = field
definition = rex field=$field$ "((?<days>\d+)\+)?(?<hours>\d+):(?<minutes>\d+):(?<seconds>\d+)" | eval $field$=coalesce(days,"0")+"d "+hours+"h "+minutes+"m "+seconds+"s" | fields - days,hours,minutes,seconds

[not_checked_items_by_type(1)]
args = type
definition = `metadata_by_type("$type$")` | `check_items("*", "$type$", "NOT")` | `hr_duration("noEventsSince")` | table item, noEventsSince | rename item as $type$

[check_lookup]
definition = inputlookup checkitems \
| eval error=if(in(type, "sourcetype", "source", "host"), null(), "Type wrong! Must be one of 'sourcetype', 'source', 'host'") \
| eval error=if(in(interval, "hourly", "daily"), coalesce(error, null()), coalesce(error, "Interval wrong! Must be one of 'hourly', 'daily'")) \
| where isnotnull(error) \
| table item, type, timeliness, interval, error











